openapi: 3.0.0
info:
  version: 1.0.0
  title: Laitto HERMS API
security:
  - bearerAuth: []
paths:

  /v1/deviceSetups:
    post:
      operationId: createDeviceSetup
      summary: Create device setup.
      description: Creates a device setup
      tags:
        - DeviceSetups
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/DeviceSetup'
        description: Payload
        required: true
      responses:
        "200":
          description: Created session
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceSetup"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    get:
      operationId: listDeviceSetups
      summary: List device setups
      description: Lists device setups
      tags:
        - DeviceSetups
      responses:
        "200":
          description: A device setup
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DeviceSetup"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/deviceSetups/{deviceSetupId}:
    get:
      operationId: findDeviceSetup
      summary: Find a device setup
      description: Finds a device setup by id
      tags:
        - DeviceSetups
      parameters:
        - name: deviceSetupId
          required: true
          in: path
          description: device setup id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: A device setup
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceSetup"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      operationId: updateDeviceSetup
      summary: Update device setup
      description: Update device setup
      tags:
        - DeviceSetups
      parameters:
        - name: deviceSetupId
          required: true
          in: path
          description: device setup id
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/DeviceSetup'
        description: Payload
        required: true
      responses:
        "200":
          description: Updated device setup
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceSetup"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      operationId: deleteDeviceSetup
      summary: Delete device setup
      description: Delete a device setup
      tags:
        - DeviceSetups
      parameters:
        - name: deviceSetupId
          required: true
          in: path
          description: device setup id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: A successful response
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/deviceSetups/{deviceSetupId}/devices:
    get:
      operationId: listDeviceSetupDevices
      summary: Lists device setup devices
      description: Lists device setup devices
      tags:
        - DeviceSetups
      parameters:
        - name: deviceSetupId
          required: true
          in: path
          description: device setup id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: A device setup device
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DeviceSetupDevice"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createDeviceSetupDevice
      summary: Create device setup devices
      description: Create device setup devices
      tags:
        - DeviceSetups
      parameters:
        - name: deviceSetupId
          required: true
          in: path
          description: device setup id
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/DeviceSetupDevice'
        description: Payload
        required: true
      responses:
        "200":
          description: Created device
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceSetupDevice"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/deviceSetups/{deviceSetupId}/devices/{deviceId}:
    get:
      operationId: findDeviceSetupDevice
      summary: Find a device setup device
      description: Find a device setup device
      tags:
        - DeviceSetups
      parameters:
        - name: deviceSetupId
          required: true
          in: path
          description: device setup id
          schema:
            type: string
            format: uuid
        - name: deviceId
          required: true
          in: path
          description: device id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: A session
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceSetupDevice"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      operationId: updateDeviceSetupDevice
      summary: Update device setup device
      description: Update a device setup device
      tags:
        - DeviceSetups
      parameters:
        - name: deviceSetupId
          required: true
          in: path
          description: device setup id
          schema:
            type: string
            format: uuid
        - name: deviceId
          required: true
          in: path
          description: device id
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/DeviceSetupDevice'
        description: Payload
        required: true
      responses:
        "200":
          description: A device
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceSetupDevice"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      operationId: deleteDeviceSetupDevice
      summary: Delete device setup device
      description: Delete a device setup device
      tags:
        - DeviceSetups
      parameters:
        - name: deviceSetupId
          required: true
          in: path
          description: device setup id
          schema:
            type: string
            format: uuid
        - name: deviceId
          required: true
          in: path
          description: device id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: A successful response
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/deviceSetups/{deviceSetupId}/pipes:
    get:
      operationId: listDeviceSetupPipes
      summary: Lists device setup pipes
      description: Lists device setup pipes
      tags:
        - DeviceSetups
      parameters:
        - name: deviceSetupId
          required: true
          in: path
          description: device setup id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: A device setup pipe
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DeviceSetupPipe"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createDeviceSetupPipe
      summary: Create device setup pipes
      description: Create device setup pipes
      tags:
        - DeviceSetups
      parameters:
        - name: deviceSetupId
          required: true
          in: path
          description: device setup id
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/DeviceSetupPipe'
        description: Payload
        required: true
      responses:
        "200":
          description: Created pipe
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceSetupPipe"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/deviceSetups/{deviceSetupId}/pipes/{pipeId}:
    get:
      operationId: findDeviceSetupPipe
      summary: Find a device setup pipe
      description: Find a device setup pipe
      tags:
        - DeviceSetups
      parameters:
        - name: deviceSetupId
          required: true
          in: path
          description: device setup id
          schema:
            type: string
            format: uuid
        - name: pipeId
          required: true
          in: path
          description: pipe id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: A session
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceSetupPipe"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      operationId: updateDeviceSetupPipe
      summary: Update device setup pipe
      description: Update a device setup pipe
      tags:
        - DeviceSetups
      parameters:
        - name: deviceSetupId
          required: true
          in: path
          description: device setup id
          schema:
            type: string
            format: uuid
        - name: pipeId
          required: true
          in: path
          description: pipe id
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/DeviceSetupPipe'
        description: Payload
        required: true
      responses:
        "200":
          description: A pipe
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceSetupPipe"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      operationId: deleteDeviceSetupPipe
      summary: Delete device setup pipe
      description: Delete a device setup pipe
      tags:
        - DeviceSetups
      parameters:
        - name: deviceSetupId
          required: true
          in: path
          description: device setup id
          schema:
            type: string
            format: uuid
        - name: pipeId
          required: true
          in: path
          description: pipe id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: A successful response
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/deviceSetups/{deviceSetupId}/scenarios:
    get:
      operationId: listDeviceSetupScenarios
      summary: Lists device setup scenarios
      description: Lists device setup scenarios
      tags:
        - DeviceSetups
      parameters:
        - name: deviceSetupId
          required: true
          in: path
          description: device setup id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: A device setup
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DeviceSetupScenario"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createDeviceSetupScenario
      summary: Create device setup scenario.
      description: Create device setup scenario.
      tags:
        - DeviceSetups
      parameters:
        - name: deviceSetupId
          required: true
          in: path
          description: device setup id
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/DeviceSetupScenario'
        description: Payload
        required: true
      responses:
        "200":
          description: Created session
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceSetupScenario"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/deviceSetups/{deviceSetupId}/scenarios/{scenarioId}:
    get:
      operationId: findDeviceSetupScenario
      summary: Find a device setup scenario
      description: Find a device setup scenario
      tags:
        - DeviceSetups
      parameters:
        - name: deviceSetupId
          required: true
          in: path
          description: device setup id
          schema:
            type: string
            format: uuid
        - name: scenarioId
          required: true
          in: path
          description: scenario id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: A session
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceSetupScenario"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      operationId: updateDeviceSetupScenario
      summary: Update device setup scenario
      description: Update a device setup scenario
      tags:
        - DeviceSetups
      parameters:
        - name: deviceSetupId
          required: true
          in: path
          description: device setup id
          schema:
            type: string
            format: uuid
        - name: scenarioId
          required: true
          in: path
          description: scenario id
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/DeviceSetupScenario'
        description: Payload
        required: true
      responses:
        "200":
          description: A session
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceSetupScenario"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"


  /v1/deviceSetups/{deviceSetupId}/scenarios/{scenarioId}/devices:
    get:
      operationId: listDeviceSetupScenarioDevices
      summary: Lists device setup scenario devices
      description: Lists device setup scenario devices
      tags:
        - DeviceSetups
      parameters:
        - name: deviceSetupId
          required: true
          in: path
          description: device setup id
          schema:
            type: string
            format: uuid
        - name: scenarioId
          required: true
          in: path
          description: scenario id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: A device setup
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DeviceSetupScenarioDevice"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      operationId: createDeviceSetupScenarioDevice
      summary: Create device setup scenario devices
      description: Create device setup scenario devices
      tags:
        - DeviceSetups
      parameters:
        - name: deviceSetupId
          required: true
          in: path
          description: device setup id
          schema:
            type: string
            format: uuid
        - name: scenarioId
          required: true
          in: path
          description: scenario id
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/DeviceSetupScenarioDevice'
        description: Payload
        required: true
      responses:
        "200":
          description: Created session
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceSetupScenarioDevice"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/deviceSetups/{deviceSetupId}/scenarios/{scenarioId}/devices/{scenarioDeviceId}:
    get:
      operationId: findDeviceSetupScenarioDevice
      summary: Find a device setup scenario device
      description: Find a device setup scenario device
      tags:
        - DeviceSetups
      parameters:
        - name: deviceSetupId
          required: true
          in: path
          description: device setup id
          schema:
            type: string
            format: uuid
        - name: scenarioId
          required: true
          in: path
          description: scenario id
          schema:
            type: string
            format: uuid
        - name: scenarioDeviceId
          required: true
          in: path
          description: scenario device id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: A session
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceSetupScenarioDevice"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      operationId: updateDeviceSetupScenarioDevice
      summary: Update device setup scenario device
      description: Update a device setup scenario device
      tags:
        - DeviceSetups
      parameters:
        - name: deviceSetupId
          required: true
          in: path
          description: device setup id
          schema:
            type: string
            format: uuid
        - name: scenarioId
          required: true
          in: path
          description: scenario id
          schema:
            type: string
            format: uuid
        - name: scenarioDeviceId
          required: true
          in: path
          description: scenario device id
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/DeviceSetupScenarioDevice'
        description: Payload
        required: true
      responses:
        "200":
          description: A session
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceSetupScenarioDevice"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      operationId: deleteDeviceSetupScenarioDevice
      summary: Delete device setup scenario device
      description: Delete a device setup scenario device
      tags:
        - DeviceSetups
      parameters:
        - name: deviceSetupId
          required: true
          in: path
          description: device setup id
          schema:
            type: string
            format: uuid
        - name: scenarioId
          required: true
          in: path
          description: scenario id
          schema:
            type: string
            format: uuid
        - name: scenarioDeviceId
          required: true
          in: path
          description: scenario device id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: A successful response
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/sessions:
    post:
      operationId: createSession
      summary: Create session.
      description: Creates a session
      tags:
        - Sessions
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/Session'
        description: Payload
        required: true
      responses:
        "200":
          description: Created session
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Session"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    get:
      operationId: listSessions
      summary: List sessions
      description: Lists sessions
      tags:
        - Sessions
      responses:
        "200":
          description: sessions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Session"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/sessions/{sessionId}:
    get:
      operationId: findSession
      summary: Find a session.
      description: Finds a session by id
      tags:
        - Sessions
      parameters:
        - name: sessionId
          required: true
          in: path
          description: session id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: A session
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Session"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      operationId: updateSession
      summary: Update session.
      description: Update a session
      tags:
        - Sessions
      parameters:
        - name: sessionId
          required: true
          in: path
          description: session id
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/Session'
        description: Payload
        required: true
      responses:
        "200":
          description: A session
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Session"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/sessions/{sessionId}/recipes:
    post:
      operationId: createSessionRecipe
      summary: Create session recipe.
      description: Creates a session recipe.
      tags:
        - Sessions
      parameters:
        - name: sessionId
          required: true
          in: path
          description: session id
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/SessionRecipe'
        description: Payload
        required: true
      responses:
        "200":
          description: Created session recipe
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SessionRecipe"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    get:
      operationId: listSessionRecipes
      summary: List session recipes
      description: Lists session recipes
      tags:
        - Sessions
      parameters:
        - name: sessionId
          required: true
          in: path
          description: session id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: session recipes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SessionRecipe"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/sessions/{sessionId}/recipes/{sessionRecipeId}:
    get:
      operationId: findSessionRecipe
      summary: Find a session recipe.
      description: Finds a session recipe by id
      tags:
        - Sessions
      parameters:
        - name: sessionId
          required: true
          in: path
          description: session id
          schema:
            type: string
            format: uuid
        - name: sessionRecipeId
          required: true
          in: path
          description: session recipe id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: A session recipe
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SessionRecipe"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      operationId: updateSessionRecipe
      summary: Update session recipe
      description: Update a session recipe
      tags:
        - Sessions
      parameters:
        - name: sessionId
          required: true
          in: path
          description: session id
          schema:
            type: string
            format: uuid
        - name: sessionRecipeId
          required: true
          in: path
          description: session recipe id
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/SessionRecipe'
        description: Payload
        required: true
      responses:
        "200":
          description: Updated session recipe
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SessionRecipe"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      operationId: deleteSessionRecipe
      summary: Delete session recipe
      description: Delete a session recipe
      tags:
        - Sessions
      parameters:
        - name: sessionId
          required: true
          in: path
          description: session id
          schema:
            type: string
            format: uuid
        - name: sessionRecipeId
          required: true
          in: path
          description: session recipe id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: A successful response
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/sessions/{sessionId}/activeScenarios:
    post:
      operationId: createSessionActiveScenario
      summary: Create session active scenario.
      description: Creates a session active scenario. Method is used to create manual scenario activations, so only mode manual mode requests are accepted.
      tags:
        - Sessions
      parameters:
        - name: sessionId
          required: true
          in: path
          description: session id
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/SessionActiveScenario'
        description: Payload
        required: true
      responses:
        "200":
          description: Created session active scenario
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SessionActiveScenario"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    get:
      operationId: listSessionActiveScenarios
      summary: List session active scenarios
      description: Lists session active scenarios
      tags:
        - Sessions
      parameters:
        - name: sessionId
          required: true
          in: path
          description: session id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: sessions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SessionActiveScenario"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/sessions/{sessionId}/activeScenarios/{activeScenarioId}:
    delete:
      operationId: deleteSessionActiveScenario
      summary: Delete session active scenario
      description: Delete a session active scenario. Method is used to delete manual scenario activations, so only mode manual requests are accepted. If automatic scenario need to be stopped, use create session active scenario with mode manualOff
      tags:
        - Sessions
      parameters:
        - name: sessionId
          required: true
          in: path
          description: session id
          schema:
            type: string
            format: uuid
        - name: activeScenarioId
          required: true
          in: path
          description: active scenario id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: A successful response
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/sessions/{sessionId}/recipeSteps:
    get:
      operationId: listSessionRecipeSteps
      summary: List session recipe steps
      description: List session recipe steps
      tags:
        - Sessions
      parameters:
        - name: sessionId
          required: true
          in: path
          description: session id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: session recipe steps
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SessionRecipeStep"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/sessions/{sessionId}/recipeSteps/{recipeStepId}:
    put:
      operationId: updateSessionRecipeStep
      summary: Update session recipe step
      description: Update a session recipe step
      tags:
        - Sessions
      parameters:
        - name: sessionId
          required: true
          in: path
          description: session id
          schema:
            type: string
            format: uuid
        - name: recipeStepId
          required: true
          in: path
          description: recipe step id
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/SessionRecipeStep'
        description: Payload
        required: true
      responses:
        "200":
          description: Updated session recipe step
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SessionRecipeStep"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/sessions/{sessionId}/temperatures:
    get:
      operationId: listSessionTemperatures
      summary: List session temperatures
      description: List session thermometer device temperatures
      tags:
        - Sessions
      parameters:
        - name: sessionId
          required: true
          in: path
          description: session id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: session temperatures
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SessionTemperature"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/recipes:
    post:
      operationId: createRecipe
      summary: Create recipe.
      description: Creates a recipe
      tags:
        - Recipes
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/Recipe'
        description: Payload
        required: true
      responses:
        "200":
          description: Created recipe
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Recipe"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    get:
      operationId: listRecipes
      summary: List recipes
      description: Lists recipes
      tags:
        - Recipes
      responses:
        "200":
          description: recipes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Recipe"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/recipes/{recipeId}:
    get:
      operationId: findRecipe
      summary: Find a recipe.
      description: Finds a recipe by id
      tags:
        - Recipes
      parameters:
        - name: recipeId
          required: true
          in: path
          description: recipe id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: A recipe
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Recipe"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      operationId: updateRecipe
      summary: Update recipe.
      description: Update a recipe
      tags:
        - Recipes
      parameters:
        - name: recipeId
          required: true
          in: path
          description: recipe id
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/Recipe'
        description: Payload
        required: true
      responses:
        "200":
          description: A recipe
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Recipe"
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      operationId: deleteRecipe
      summary: Delete recipe.
      description: Delete a recipe
      tags:
        - Recipes
      parameters:
        - name: recipeId
          required: true
          in: path
          description: recipe id
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: A successful response
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/system/ping:
    get:
      summary: System ping endpoint
      operationId: ping
      tags:
        - system
      responses:
        '200':
          description: System ping response
          content:
            text/plain:
              schema:
                description: Returns PING
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /v1/system/syncRecipes:
    get:
      summary: Synchronize recipes from external sources
      operationId: syncRecipes
      tags:
        - system
      responses:
        '204':
          description: Empty response indicating success
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:

    Session:
      required:
        - name
        - phase
        - deviceSetupId
        - recipeIds
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        phase:
          $ref: '#/components/schemas/SessionPhase'
        deviceSetupId:
          type: string
          format: uuid

    SessionRecipe:
      type: object
      required:
        - recipeId
        - elapsedTime
        - paused
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        recipeId:
          type: string
          format: uuid
        elapsedTime:
          type: integer
          format: int32
          description: |
            The current time in seconds since the session recipe was started. This value progresses when the session recipe is not paused.
        paused:
          type: boolean
          description: |
            Indicates whether the session is paused for given recipe. When true, the elapsedTime does not progress.

    SessionTemperature:
      type: object
      required:
        - thermometerDeviceId
        - temperature
      properties:
        thermometerDeviceId:
          type: string
          format: uuid
        temperature:
          description: |
            Temperature in degrees Celsius. If measurement is older than 5 minutes, the value is considered stale and will not be reported here.
          type: integer
          format: int32

    SessionRecipeStep:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        recipeId:
          description: |
            Recipe id for this step. This value is derived from the recipe and is immutable during the session.
          type: string
          format: uuid
          readOnly: true
        recipeStageType:
          $ref: '#/components/schemas/RecipeStageType'
        time:
          description: |
            Step start time in seconds since session start.

            This value is derived from the recipe and is immutable during the session.
          type: integer
          format: int32
          readOnly: true
        duration:
          description: |
            Step duration in seconds. 

            This value is derived from the recipe and is immutable during the session.
          type: integer
          format: int32
          readOnly: true
        name:
          description: |
            Step name.

            This value is derived from the recipe and is immutable during the session.
          type: string
          readOnly: true
        targetMashTemperature:
          description: |
            Target mash temperature for this step in degrees Celsius. 

            If the step does not have a target temperature, this field will be null. 
            
            This value is derived from the recipe and is immutable during the session.
          type: integer
          format: int32
          readOnly: true
        targetHotLiquidTemperature:
          description: |
            Target hot liquid temperature for this step in degrees Celsius. 

            If the step does not have a target temperature, this field will be null. 
            
            This value is derived from the recipe and is immutable during the session.
          type: integer
          format: int32
          readOnly: true
        startedAt:
          description: |
            The time when the step was started. Setting this value will mark the step as started.
          type: integer
          format: int32
        completedAt:
          description: |
            The time when the step was completed. Setting this value will mark the step as completed.
          type: integer
          format: int32

    SessionActiveScenario:
      required:
        - scenarioId
        - mode
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        scenarioId:
          type: string
          format: uuid
        mode:
          $ref: '#/components/schemas/SessionActiveScenarioMode'

    SessionActiveScenarioMode:
      type: string
      enum:
        - auto
        - manual
        - manualOff

    RecipeStageType:
      type: string
      enum:
        - MASH
        - EVENT
        - BOIL
        - HOPSTAND
        - RAMP

    RecipeStage:
      type: object
      required:
        - type
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        type:
          $ref: '#/components/schemas/RecipeStageType'
        steps:
          type: array
          items:
            $ref: '#/components/schemas/RecipeStageStep'

    RecipeStageStep:
      type: object
      required:
        - duration
        - time
        - orderNumber
        - group
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        duration:
          type: integer
          format: int32
        name:
          type: string
        time:
          type: integer
          format: int32
        stepIndex:
          type: integer
          format: int32
        targetMashTemperature:
          type: integer
          format: int32
        targetHotLiquidTemperature:
          type: integer
          format: int32

    Recipe:
      type: object
      required:
        - source
        - sourceId
        - name
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          description: Recipe name
        sourceId:
          type: string
          description: Recipe id in the source system
        source:
          $ref: '#/components/schemas/RecipeSource'

    RecipeSource:
      type: string
      enum:
        - BREWFATHER

    ExternalSessionSource:
      type: string
      enum:
        - BREWFATHER

    SessionPhase:
      type: string
      enum:
        - NOT_STARTED
        - PREPARATION
        - MASHING
        - LAUTERING
        - BOILING
        - WHIRLPOOLING
        - FERMENTATION
        - MATURATION
        - STORING

    DeviceSetup:
      type: object
      required:
        - name
        - controllerId
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        controllerId:
          type: string

    DeviceSetupDevice:
      type: object
      required:
        - name
        - type
        - controllerIndex
        - properties
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        deviceId:
          type: string
        type:
          $ref: '#/components/schemas/DeviceSetupDeviceType'
        controllerIndex:
          type: integer
          format: int
        temperatureCorrection:
          type: number
          format: float
        properties:
          $ref: '#/components/schemas/DeviceSetupDeviceProperties'

    DeviceSetupDeviceProperties:
      type: object
      required:
        - diagramX
        - diagramY
      properties:
        diagramX:
          type: number
          format: float
        diagramY:
          type: number
          format: float
        inputPositions:
          type: array
          items:
            type: string
        outputPositions:
          type: array
          items:
            type: string

    DeviceSetupPipe:
      type: object
      description: Device setup liquid pipe
      required:
        - inputDeviceId
        - outputDeviceId
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        inputDeviceId:
          type: string
          format: uuid
        outputDeviceId:
          type: string
          format: uuid

    DeviceSetupDeviceType:
      type: string
      enum:
        - VALVE
        - TEE_CONNECTOR
        - WATER_SOURCE
        - HOT_LIQUID_TANK
        - DETERGENT
        - MASH_TANK
        - BOIL_KETTLE
        - PUMP
        - HERMS_COIL
        - COOLER
        - HEATER
        - FERMENTOR
        - DRAIN
        - MASH_TANK_THERMOMETER
        - HOT_LIQUID_TANK_THERMOMETER
        - HERMS_COIL_THERMOMETER
        - BOIL_KETTLE_THERMOMETER

    DeviceSetupScenario:
      type: object
      required:
        - type
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        type:
          $ref: '#/components/schemas/DeviceSetupScenarioType'

    DeviceSetupScenarioDevice:
      type: object
      required:
        - status
        - deviceId
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        deviceId:
          type: string
          format: uuid
        status:
          type: integer
          minimum: 0
          maximum: 100

    DeviceSetupScenarioType:
      type: string
      enum:
        - FILL_HOT_LIQUID_TANK
        - FILL_BOIL_KETTLE
        - HEAT_HOT_LIQUID_TANK
        - HEAT_BOIL_KETTLE
        - CIRCULATE_HOT_LIQUID_TANK
        - CIRCULATE_BOIL_KETTLE
        - CIRCULATE_MASH_TANK
        - PUMP_BOIL_KETTLE_TO_MASH_TANK
        - PUMP_HOT_LIQUID_TANK_TO_MASH_TANK
        - PUMP_MASH_TANK_TO_BOIL_KETTLE
        - PUMP_BOIL_KETTLE_TO_FERMENTOR
        - COOLING
        - HEAT_MASH_TANK
        - COOL_MASH_TANK
        - COOL_HOT_LIQUID_TANK
        - BOIL

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string